 /* 
         less 1 嵌套写法
              2 可以写变量
              3 混合
              4 函数
 
 */
 .mystyle(@a, @b) {
     //less 的形参 可以赋予默认值；     
     width: @a;
     height: @b;
 }

 @w: 200px; //声明一个变量 对应的值是200px

 * {
     margin: 0;
     padding: 0;
     list-style: none;
 }

 .w {
     .mystyle(200px, 300px);
     width: 200px;
     height: 200px;
     overflow: hidden;
 }

 span:extend(.w) {
     //只混合.w自己的样式 不会混合后代的样式
 }

 #box {
     width: 200px;
     height: 200px;
     margin: 150px auto;
     position: relative;
     background: saddlebrown;
     perspective: 2000px;

     ul {
         position: absolute;
         width: 100%;
         height: 100%;
         transform-style: preserve-3d;
         transform: rotateX(0deg) rotateY(0deg);

         li {
             position: absolute;
             text-align: center;
             line-height: 200px;
             left: 0;
             top: 0;
             width: 100%;
             height: 100%;
             background: rgba(12, 255, 202, 0.6);
             border: 1px dashed salmon;
             box-sizing: border-box;

             &:nth-child(2) {
                 //&就代表了当前的父级元素
                 transform: rotateX(-90deg) translateY(200px);
                 transform-origin: bottom;
             }

             &:nth-child(3) {
                 transform: rotateY(-90deg);
                 transform-origin: right;
             }

             &:nth-child(4) {
                 transform: rotateY(90deg);
                 transform-origin: left;
             }

             &:nth-child(5) {
                 transform: rotateX(-90deg);
                 transform-origin: top;
             }

             &:nth-child(6) {
                 transform: translateZ(-200px) rotateX(180deg);
                 /* transform-origin: top; */
             }
         }

     }
 }